#+Title: JS Destructuring Exercises
#+AUTHOR: Andrew Buckingham
#+STARTUP: indent
#+OPTIONS: num:nil toc:nil ^:nil
#+FILETAGS: :springboard:
#+HTML_HEAD: <link rel="stylesheet" type="text/css" href="http://thomasf.github.io/solarized-css/solarized-dark.min.css" />

** Object Destructuring 1

What does the following code return/print?

#+begin_src js :tangle obj_destruct_1.js

  let facts = { numPlanets: 8, yearNeptuneDiscovered: 1846 };
  let { numPlanets, yearNeptuneDiscovered } = facts ;

  console.log(numPlanets);  // 8
  console.log(yearNeptuneDiscovered);  // 1846
#+end_src

** Object Destructuring 2

What does the following code return/print?

#+begin_src js :tangle obj.destruct_2.js
  let planetFacts = {
    numPlanets: 8,
    yearNeptuneDiscovered: 1846,
    yearMarsDiscovered: 1659
  };

  let { numPlanets, ...discoveryYears } = planetFacts;

  console.log(discoveryYears); // {yearMarsDiscovered: 1659, yearNeptuneDiscovered: 1846}
#+end_src

** Object Destructuring 3

What does the following code return/print?

#+begin_src js :tangle obj_destruct_3.js
  function getUserData({ firstName, favoriteColor = "green" }){
    return `Your name is ${ firstName } and you like ${ favoriteColor }`;
  }

  getUserData ({ firstName: "Alejandro", favoriteColor: "purple" }) // "Your name is Alejandro and you like purple" 
  getUserData ({ firstName: "Melissa" })  // "Your name is Melissa and you like green"
  "green" }
  getUserData ({})  // "Your name is undefined and you like green"
#+end_src

** Array Destructuring 1

What does the following code return/print?

#+begin_src js :tangle array_destruct_1.js
  let [first, second, third]  =  ["Maya", "Marisa", "Chi"];

  console.log(first); // "Maya"
  console.log(second); // "Marisa"
  console.log(third); // "Chi"
#+end_src

** Array Destructuring 2

What does the following code return/print?

#+begin_src js :tangle array_destruct_2.js
  let [raindrops, whiskers, ...aFewOfMyFavoriteThings] = [
    "Raindrops on roses",
    "whiskers on kittens",
    "Bright copper kettles",
    "warm woolen mittens",
    "Brown paper packages tied up with strings"
  ]

  console.log(raindrops); // "Raindrops on roses"
  console.log(whiskers); // "whiskers on kittens"
  console.log(aFewOfMyFavoriteThings); // ["Bright copper kettles", "warm woolen mittens", "Brown paper packages tied up with strings"]
#+end_src

** Array Destructuring 3

What does the following code return/print?

#+begin_src js :tangle array_destruct_3.js
  let numbers = [10, 20, 30];
  [numbers[1], numbers[2]] = [numbers[2], numbers[1]]

  console.log(numbers)  // [10, 30, 20]
#+end_src

* ES2015 Refactoring

In this exercise, you'll refactor some ES5 code into ES2015.

** ES5 Assigning Variables to Object Properties

#+begin_src js :tangle obj_props.js
  var obj = {
    numbers: {
      a: 1,
      b: 2
    }
  };

  var a = obj.numbers.a;
  var b = obj.numbers.b;
#+end_src

** ES2015 Object Destructuring

#+begin_src js :tangle obj_destruct_4.js
  const obj = {
    numbers: {
      a: 1,
      b: 2
    }
  };

  const {a, b} = obj.numbers;
#+end_src

** ES5 Array Swap

#+begin_src js :tangle array_swap.js
  var arr = [1, 2];
  var temp = arr[0];

  arr[0] = arr[1];
  arr[1] = temp;
#+end_src

** ES2015 One-Line Array Swap with Destructuring
#+begin_src js :tangle one_liner.js
  // Pattern Matching FTW!
  [arr[0], arr[1] = arr[1], arr[0]]
#+end_src

** raceResults()

Write a function called raceResults which accepts a single array argument. It should return an object with the keys first, second, third, and rest.

#+begin_quote

- first: the first element in the array
- second: the second element in the array
- third: the third element in the array
- rest: all other elements in the array
#+end_quote

- Write a one line function to make this work using: 

  - An arrow function
  - Destructuring
  - â€˜Enhanced' object assignment (same key/value shortcut)

  #+begin_src js :tangle race_results.js
    const raceResults = ([first, second, third, ...rest]) => ({first, second, third, rest});

    raceResults(['Tom', 'Margaret', 'Allison', 'David', 'Pierre'])

    /*
      {
      first: "Tom",
      second: "Margaret",
      third: "Allison",
      rest: ["David", "Pierre"]
      }
    ,*/
  #+end_src
